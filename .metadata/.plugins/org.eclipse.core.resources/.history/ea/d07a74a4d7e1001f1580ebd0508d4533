<%@ page contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%
	request.setCharacterEncoding("UTF-8");
	String cp = request.getContextPath();
%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>AjaxTest04.jsp</title>
<link rel="stylesheet" type="text/css" href="<%=cp %>/css/main.css">
<style type="text/css">
	#result
	{
		display: inline-block;
		width: 250px;
		color: #F33;
		font-size: small;
	}

</style>

<script type="text/javascript" src="<%=cp %>/js/ajax.js"></script>
<script type="text/javascript">

	function check()
	{
		// 확인
		//alert("함수 호출 확인~!!!");
		
		var id = document.getElementById("id").value;
		var name = document.getElementById("name").value;
		var addr = document.getElementById("addr").value;
		
		// url 구성
		var url = "test03.do?id=" + id;
		
		// AJAX 객체 생성(→ XMLHttpRequest 객체 생성)
		ajax = createAjax();								//-- ajax.js
		
		// 환경 설정(『open("메소드방식", "URL", 비동기/동기)』)
		ajax.open("GET", url, true);
		
		ajax.onreadystatechange = function()
		{
			if (ajax.readyState == 4 && ajax.status == 200)
			{
				// 업무 처리(→ 외부로 추출하여 함수 정의)
				callBack();
			}
		};
		
		ajax.send("");
		
	}
	
	// 업무 처리 함수
	//-- 넘겨준 아이디에 대한 중복 검사를 수행하고
	//   그 결과(1 or 0)를 통보받아
	//   사용자에게 메세지 출력 → span → #result
	function callBack()
	{
		// 외부로 추출된 업무 처리내용 구성(responseText / responseXML)
		
		var data = ajax.responseText;
		
		data = parseInt(data);
		
		if (data == 0)
		{
			document.getElementById("result").innerText = "사용 가능한 아아디입니다.";
		}
		else
		{
			document.getElementById("result").innerText = "이미 사용 중인 아이디입니다.";
		}
	}
	
	
	
	function search()
	{
		// 확인
		//alert("함수 호출 확인~!!!");
		
		// 데이터 수집
		var addr = document.getElementById("addr").value;	//-- 입력받은 동
		
		// URL 준비
		var url = "test04.do?addr=" + addr;
		
		// XMLHttpRequest 객체(→ AJAX 객체) 생성
		ajax = createAjax();								//-- ajax.js
		
		// 설정
		ajax.open("GET", url, true);
		//ajax.onreadystatechange = 동작;
		ajax.onreadystatechange = function()
		{
			if (ajax.readyState==4 && ajax.status==200)
			{
				// 업무 수행
				callBack2();
			}
		};
		
		ajax.send("");
		
	}
	
	// 추출된 수행 업무 함수 정의
	// → 우편번호 검색 결과를 통보받아서
	//    사용자에게 안내해줄 수 있도록 처리 (단일데이터가 아니라 다량의 데이터를 처리해볼 것이므로 XML로 처리~!)
	function callBack2()
	{
		// XML 문서 전체의 참조 객체
		// (→ 흔히 XML 문서 객체라고 하는 XML DOM을 받음.)
		var doc = ajax.responseXML;		//받아온 XML은 모두 루트엘리먼트 list 하위에 있다.
		
		// XML 문서의 최상위 엘리먼트(루트 엘리먼트)
		var root = doc.documentElement;
		//-- 현재는 『<list>』 엘리먼트
		
		// list 엘리먼트 하위의 모든 『<item>』 엘리먼트 반환받기
		var itemList = root.getElementsByTagName("item");
		//다중값이므로 getElements~이고, 이 때 받는 반환값은 자바스크립트 배열이다.
		
		// select box 초기화
		document.getElementById("addrResult").innerHTML = "";
		
		// 검색 결과 확인
		if (itemList.length==0)
		{
			document.getElementById("addrResult").innerHTML
				= "<option>주소를 입력하세요.</option>";
		}
		else
		{
			document.getElementById("addrResult").innerHTML
			= "<option value='0'>주소를 선택하세요.</option>";
			
			// 검색 결과가 존재할 경우... 반복문을 순환하며 각 데이터 가져오기
			for (var i=0; i<itemList.length; i++)	//-- 수신한 아이템의 갯수만큼 반복 순환
			{
				var zipcode = itemList[i].getElementsByTagName("zipcode")[0];
				var address = itemList[i].getElementsByTagName("address")[0];
				
				// ※ 태그가 가지는 텍스트는 태그의 첫 번째 자식이고 (→ firstChild)...
				//	  텍스트 노드의 값은 『nodeValue』 로 가져온다.
				
				var zipCodeText = zipcode.firstChild.nodeValue;
				var addressText = address.firstChild.nodeValue;
				
				// 가져온 데이터를 select box 에 아이템 추가
				document.getElementById("addrResult").innerHTML
					+= "<option value='" + zipCodeText + "/" + addressText 
					+ "'>[" + zipCodeText + "] " + addressText + "</option>";
				//		↓
				// <option value="04047/서울특별시 마포구 독막로3길 40 (서교동, 서교동다세대주택)">
				//		[04047] 서울특별시 마포구 독막로3길 40 (서교동, 서교동다세대주택)
				// </option>
				
			}
		}
		
	}
	
	
</script>
</head>
<body>

<div>
	<h1>회원 가입(아이디 중복검사 + 우편번호 검색)</h1>
	<ul>
		<li>- Test03send.java</li>
		<li>- AjaxTest03.jsp</li>
		<li>- main.css</li>
		<li>- ajax.js</li>
		<li>- Test03.java</li>
		<li>- Test03ok.jsp</li>
		
		<li>- Test04send.java</li>
		<li>- AjaxTest04.jsp</li>
		
		<li>- web.xml</li>
		
		<li>※ url : test04send.do / test04.do</li>
		<li>※ 자료구조 활용</li>
	</ul>
</div>

<div>
	<table class="table">
		<tr>
			<th>아이디</th>
			<td>
				<input type="text" id="id" class="control">
				<input type="button" value="중복검사" class="control" onclick="check()">
				<span id="result"></span>
			</td>
		</tr>
		<tr>
			<th>이름</th>
			<td>
				<input type="text" id="name" class="control">
			</td>
		</tr>
		<tr>
			<th>주소</th>
			<td>
				<input type="text" id="addr" class="control" placeholder="동 입력">
				<input type="button" value="검색하기" class="control" onclick="search()">
				<br>
				<select id="addrResult" class="control" onselect="javascript:select()">
					<option>주소를 입력하세요.</option>
				</select>
			</td>
		</tr>
		<tr>
			<th>주소 검색 결과</th>
			<td>
				<input type="text" id="addr1" class="control" readonly="readonly" style="width: 200px;">
				<br>
				<input type="text" id="addr2" class="control" readonly="readonly" style="width: 400px;">
				<br>
				<input type="text" id="addr3" class="control" placeholder="상세주소를 입력하세요."
				style="width: 400px;">
			</td>
		</tr>
	</table>
</div>

</body>
</html>